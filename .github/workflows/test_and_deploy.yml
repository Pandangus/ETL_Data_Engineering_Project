# This workflow will test and deploy the project code
# It will run whenever there are any pushed changes or merges to the main branch

name: Test-Deploy-VA
on:
  push:
    branches:
      - "main"

jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - name: hello-world
        run: echo "=/=/=/=/=/=/=/=/=/=/=/=/=/ RUN-CHECKS =/=/=/=/=/=/=/=/=/=/=/=/=/"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: checkout repo
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: create environment
        run: make create-environment

      - name: setup dev requirements
        run: make dev-setup

      - name: setup requirements
        run: make requirements

      - name: run all checks
        run: make run-checks

  deploy:
    runs-on: ubuntu-latest
    needs: run-checks
    steps:
      - name: hello-world
        run: echo "=/=/=/=/=/=/=/=/=/=/=/=/=/ DEPLOYMENT =/=/=/=/=/=/=/=/=/=/=/=/=/"

      - name: checkout repo
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-west-2

      - name: install terraform
        uses: hashicorp/setup-terraform@v2

      - name: terraform init
        working-directory: terraform
        run: terraform init
      
      - name: terraform destroy
        working-directory: terraform
        run: terraform destroy -auto-approve

      - name: terraform plan
        working-directory: terraform
        run: terraform plan

      - name: terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve